Index: sys/dev/acpica/acpi_ec.c
===================================================================
--- sys/dev/acpica/acpi_ec.c
+++ sys/dev/acpica/acpi_ec.c
@@ -362,7 +362,8 @@
 	    ret = 0;
 
 	goto out;
-    }
+    } else
+	ecdt = 0;
 
     ret = ACPI_ID_PROBE(device_get_parent(dev), dev, ec_ids, NULL);
     if (ret > 0)
@@ -382,6 +383,17 @@
     if (ACPI_FAILURE(status))
 	params->uid = 0;
 
+    /*
+     * Check for a duplicate probe. This can happen when a probe via ECDT
+     * succeeded already. If this is a duplicate, disable this device.
+     */
+    peer = devclass_get_device(acpi_ec_devclass, params->uid);
+    if (peer && device_is_alive(peer)) {
+	device_disable(dev);
+	ret = ENXIO;
+	goto out;
+    }
+
     status = acpi_GetInteger(h, "_GLK", &params->glk);
     if (ACPI_FAILURE(status))
 	params->glk = 0;
@@ -422,16 +434,6 @@
     /* Store the values we got from the namespace for attach. */
     acpi_set_private(dev, params);
 
-    /*
-     * Check for a duplicate probe. This can happen when a probe via ECDT
-     * succeeded already. If this is a duplicate, disable this device.
-     */
-    peer = devclass_get_device(acpi_ec_devclass, params->uid);
-    if (peer == NULL || !device_is_alive(peer))
-	ret = 0;
-    else
-	device_disable(dev);
-
     if (buf.Pointer)
 	AcpiOsFree(buf.Pointer);
 out:

